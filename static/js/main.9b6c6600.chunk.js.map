{"version":3,"sources":["components/game/game.module.css","components/board/board.module.css","components/square/square.module.css","services/helper.ts","services/actions/index.ts","services/reducers/index.ts","services/store.ts","services/hooks.ts","components/square/square.tsx","components/board/board.tsx","components/game/game.tsx","components/app/app.tsx","index.tsx"],"names":["module","exports","calculateWinner","squares","lines","i","length","a","b","c","MADE_MOVE","CLEAR_FIELD","initialState","board","Array","fill","xIsNext","rootReducer","combineReducers","gomoku","state","actions","type","boardCopy","winner","payload","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","useSelector","selectorHook","Square","React","memo","props","dispatch","useDispatch","className","style","square","onClick","num","value","Board","shallowEqual","map","Game","wrapper","start__btn","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,WAAa,2B,mBCA/DD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,6ICDpB,SAASC,EAAgBC,GAW/B,IAVA,IAAMC,EAAQ,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAECC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACpBD,EAAMC,GADc,GAC/BE,EAD+B,KAC5BC,EAD4B,KACzBC,EADyB,KAEtC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACrE,OAAON,EAAQI,GAGjB,OAAO,KCjBD,IAAMG,EAAY,YACZC,EAAc,cCIrBC,EAAe,CACnBC,MAAOC,MAAM,GAAGC,KAAK,MACrBC,SAAS,GAmBEC,EAAcC,YAAgB,CAAEC,OAjBvB,WAA6D,IAA5DC,EAA2D,uDAAnDR,EAAcS,EAAqC,uCAChF,OAAQA,EAAQC,MACd,KAAKZ,EACH,IAAMa,EAAS,YAAOH,EAAMP,OACtBW,EAAStB,EAAgBkB,EAAMP,OACrC,OAAIW,GAAUD,EAAUF,EAAQI,SAAiBL,GACjDG,EAAUF,EAAQI,SAAWL,EAAMJ,QAAU,IAAM,IAC5C,2BAAKI,GAAZ,IAAmBP,MAAOU,EAAWP,SAAUI,EAAMJ,WAEvD,KAAKL,EACH,OAAO,2BAAKS,GAAZ,IAAmBP,MAAOC,MAAM,GAAGC,KAAK,MAAOC,SAAS,IAE1D,QACE,OAAOI,MCbPM,GAD0BC,OAAOC,sCAAwCC,KAC7CC,YAAgBC,MAErCC,EAAQC,YAAYhB,EAAaS,GCJ/BQ,G,MAA+CC,K,yCCU/CC,EAXmBC,IAAMC,MAAK,SAACC,GAC5C,IAAMC,EAAWC,cAIjB,OACE,wBAAQC,UAAWC,IAAMC,OAAQC,QAJnB,WACdL,EAAS,CAAElB,KAAMZ,EAAWe,QAASc,EAAMO,OAG3C,SACGP,EAAMQ,WCSEC,EAhBD,WAAO,IACX7C,EAAY+B,GAClB,SAACF,GAAD,MAAY,CACV7B,QAAS6B,EAAMb,OAAON,SAExBoC,KAJM9C,QAMR,OACE,qBAAKuC,UAAWC,IAAM9B,MAAtB,SACGV,EAAQ+C,KAAI,SAACN,EAAQvC,GAAT,OACX,cAAC,EAAD,CAAgB0C,MAAOH,EAAQE,IAAKzC,GAAvBA,S,iBCMN8C,EAjBF,WACX,IAAMX,EAAWC,cAMjB,OACE,sBAAKC,UAAWC,IAAMS,QAAtB,UACE,wBAAQV,UAAWC,IAAMU,WAAYR,QAPtB,WACjBL,EAAS,CACPlB,KAAMX,KAKN,uFAGA,cAAC,EAAD,QCZS2C,EAHH,WACV,OAAO,cAAC,EAAD,KCITC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUzB,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ0B,SAASC,eAAe,W","file":"static/js/main.9b6c6600.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"game_wrapper__3p-mg\",\"start__btn\":\"game_start__btn__2qHmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board_board__PF3JZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"square_square__2jSRT\"};","export function calculateWinner(squares: Array<string>) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t]\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i]\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a]\n\t\t}\n\t}\n\treturn null\n}\n","export const MADE_MOVE = 'MADE_MOVE';\nexport const CLEAR_FIELD = 'CLEAR_FIELD';\n\nexport interface IMadeMoveAction {\n    readonly type: typeof MADE_MOVE;\n    readonly payload: number\n}\nexport interface IClearFieldAction {\n    readonly type: typeof CLEAR_FIELD;\n}\nexport type TGomokuActions = | IMadeMoveAction | IClearFieldAction;\n","import { combineReducers } from 'redux';\nimport { calculateWinner } from '../helper';\nimport { MADE_MOVE, CLEAR_FIELD } from '../actions';\nimport { TGomoku } from '../types';\nimport { TGomokuActions } from '../actions';\nconst initialState = {\n  board: Array(9).fill(null),\n  xIsNext: true,\n};\nconst gomokuReducer = (state = initialState, actions: TGomokuActions): TGomoku => {\n  switch (actions.type) {\n    case MADE_MOVE: {\n      const boardCopy = [...state.board];\n      const winner = calculateWinner(state.board);\n      if (winner || boardCopy[actions.payload]) return state;\n      boardCopy[actions.payload] = state.xIsNext ? 'X' : 'O';\n      return { ...state, board: boardCopy, xIsNext: !state.xIsNext };\n    }\n    case CLEAR_FIELD: {\n      return { ...state, board: Array(9).fill(null), xIsNext: true };\n    }\n    default: {\n      return state;\n    }\n  }\n};\nexport const rootReducer = combineReducers({ gomoku: gomokuReducer });\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(rootReducer, enhancer);\n","import {\n    TypedUseSelectorHook,\n    useSelector as selectorHook\n  } from 'react-redux';\n  import { RootState } from './types';\n\n\n  export const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MADE_MOVE } from '../../services/actions';\nimport { TSquare } from '../../services/types';\nimport style from './square.module.css';\n\nconst Square: React.FC<TSquare> = React.memo((props) => {\n  const dispatch = useDispatch();\n  const useMove = () => {\n    dispatch({ type: MADE_MOVE, payload: props.num });\n  };\n  return (\n    <button className={style.square} onClick={useMove}>\n      {props.value}\n    </button>\n  );\n});\nexport default Square;\n","import React from 'react';\nimport { shallowEqual } from 'react-redux';\nimport { useSelector } from '../../services/hooks';\nimport style from './board.module.css';\nimport Square from '../square/square';\n\nconst Board = () => {\n  const { squares } = useSelector(\n    (store) => ({\n      squares: store.gomoku.board,\n    }),\n    shallowEqual\n  );\n  return (\n    <div className={style.board}>\n      {squares.map((square, i) => (\n        <Square key={i} value={square} num={i} />\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import Board from '../board/board';\nimport { useDispatch } from 'react-redux';\nimport { CLEAR_FIELD } from '../../services/actions';\nimport style from './game.module.css';\n\nconst Game = () => {\n  const dispatch = useDispatch();\n  const clearField = () => {\n    dispatch({\n      type: CLEAR_FIELD,\n    });\n  };\n  return (\n    <div className={style.wrapper}>\n      <button className={style.start__btn} onClick={clearField}>\n        Очистить поле\n      </button>\n      <Board />\n    </div>\n  );\n};\n\nexport default Game;\n","import Game from '../game/game';\n\nconst App = () => {\n  return <Game />;\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './services/store';\nimport './index.css';\nimport App from './components/app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}